version: '3'
services:
  mysql:
    container_name: mysqlserver
    image: mysql:8.0
    volumes:
      - ${VOLUME_PATH}/mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    ports:
      - "3306:3306"
      - "33060:33060"
    networks:
      app_net:
        ipv4_address: ${MYSQLIP}
    security_opt:
      - seccomp:unconfined
    
  mongo:
    container_name: mongoserver
    image: mongo
    volumes:
     - ${VOLUME_PATH}/mongo_data:/data/db
    restart: always
    ports: 
      - "27017:27017"
    networks:
      app_net:
        ipv4_address: ${MONGOIP}

  dotnet:
    container_name: myBlog
    depends_on:
     - mysql
     - mongo
    image: qidongs/myblog   
    volumes:
      - ${VOLUME_PATH}/developmentNotes:/app/developmentNotes
    networks:
      app_net:
        ipv4_address: ${DOTNETIP}
    restart: always
  
  dotnet2:
    container_name: myBlog2
    depends_on:
     - mysql
     - mongo
    image: qidongs/myblog
    volumes:
      - ${VOLUME_PATH}/developmentNotes:/app/developmentNotes
    networks:
      app_net:
        ipv4_address: ${DOTNETIP2}
    restart: always
  

  
  reverse:
    container_name: nginx
    hostname: reverse
    depends_on:
      - dotnet
    image: nginx:1.19
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes: 
      - ${VOLUME_PATH}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${VOLUME_PATH}/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ${VOLUME_PATH}/nginx/logs/:/var/log/nginx/
      - ${VOLUME_PATH}/nginx/certs/:/etc/nginx/certs/
      - ${VOLUME_PATH}/nginx/docs/:/etc/nginx/docs/
    networks:
      app_net:
        ipv4_address: ${NGINXIP}

    
networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"
